{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/core/api.service.ts","webpack:///./src/app/core/interceptor.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-aligh: center\\\">\\n<h1>\\n  Mdog Application 111\\n  </h1>\\n</div>\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'mdog-client-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport {ApiService} from \"./core/api.service\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {routing} from \"./app.routing\";\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport {TokenInterceptor} from \"./core/interceptor\";\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegistrationComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [ApiService, {provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi : true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from \"./login/login.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n     component: LoginComponent\n    },\n  {\n    path: 'login',\n     component: LoginComponent\n    },\n  {\n    path : 'dashboard',\n     component : DashboardComponent\n   }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserDto } from \"../model/user.dto\";\nimport { UserDetails } from \"../model/user.details\";\nimport { Observable } from \"rxjs/index\";\nimport { ClientResponseBean } from \"../model/client.responsebean\";\n\n@Injectable()\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n  baseUrl: string = 'http://localhost:8080/';\n\n  login(loginPayload) : Observable<ClientResponseBean> {\n    return this.http.post<ClientResponseBean>('/user/v1/userLogin', loginPayload);\n  }\n}\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Observable} from \"rxjs/internal/Observable\";\nimport {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let token = window.localStorage.getItem('token');\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: 'Bearer ' + token\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".error{\\n  color: #FF0000;\\n}\\n.login-container {\\n  display: flex;\\n  flex-direction: column;\\n  background-color: blanchedalmond;\\n  margin: 2em auto auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7QUFDaEI7QUFDQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsZ0NBQWdDO0VBQ2hDLHFCQUFxQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3J7XG4gIGNvbG9yOiAjRkYwMDAwO1xufVxuLmxvZ2luLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYW5jaGVkYWxtb25kO1xuICBtYXJnaW46IDJlbSBhdXRvIGF1dG87XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 login-container\\\">\\n    <h2 style=\\\"margin: auto\\\">Login </h2>\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">UserName:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" id=\\\"username\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"error\\\" *ngIf=\\\"loginForm.controls['username'].hasError('required') && loginForm.controls['username'].touched\\\">Username is required</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"pwd\\\">Password:</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" id=\\\"pwd\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"error\\\" *ngIf=\\\"loginForm.controls['password'].hasError('required') && loginForm.controls['password'].touched\\\">Password is required</div>\\n      </div>\\n      <button class=\\\"btn btn-success\\\" [disabled]=\\\"loginForm.invalid\\\">Login</button>\\n      <div *ngIf=\\\"invalidLogin\\\" class=\\\"error\\\">\\n        <div>Invalid credentials.</div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../core/api.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  invalidLogin: boolean = false;\n  constructor(private formBuilder: FormBuilder, private router: Router, private apiService: ApiService) { }\n\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    const loginPayload = {\n      username: this.loginForm.controls.username.value,\n      password: this.loginForm.controls.password.value\n    }\n    this.apiService.login(loginPayload).subscribe(data => {\n      if(data.responseCode === 200) {\n      \talert(data.message);\n        window.localStorage.setItem('token', data.result);\n        this.router.navigate(['dashboard']);\n      }else {\n        this.invalidLogin = true;\n        alert(data.message);\n      }\n    });\n  }\n\n  ngOnInit() {\n    window.localStorage.removeItem('token');\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.compose([Validators.required])],\n      password: ['', Validators.required]\n    });\n  }\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  registration works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}